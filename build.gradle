buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
       	maven {
            name = "SpongePowered"
        	url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

version =property("mc_version")+"-"+property("mod_version")+ "-" + property("version_name")
group = property("mod_group")
archivesBaseName = property("mod_name") 

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings (channel: property("mapping_channel"), version: (property("mappings_version") + "-" + property("mc_version")))
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'info'
            arg "-mixin.config=" + mod_id + ".mixins.json"

            mods {
                hmxy {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'info'
            arg "-mixin.config=" + mod_id + ".mixins.json"

            mods {
                hmxy {
                    source sourceSets.main
                }
            }
        }
        
        data {
  			workingDirectory project.file('run')
 			property 'forge.logging.markers', ''
  			property 'forge.logging.console.level', 'info'
			args '--mod', 'hmxy', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
 			mods {
    			hmxy {
    				source sourceSets.main
    			}
  			}
		}
    }
}

mixin {
    add sourceSets.main, mod_id + ".refmap.json"
   	mixin.debug=true
   	mixin.checks=true
   	mixin.hotSwap=true
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
	flatDir {
		dir 'libs'
	}
}

dependencies {
    minecraft "net.minecraftforge:forge:$mc_version-$forge_version"
    annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '6.1.0.202203080745-r'
    implementation group: 'gov.nist.math', name: 'jama', version: '1.0.3'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : "TangSoon",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  :	project.jar.archiveVersion,
                "Implementation-Vendor"   : "TangSoon",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": mod_id + ".mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')
publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}



